/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2019-05-30 14:10:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class characterProc2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"characterStyle2.css\" >\r\n");
      out.write("<title>Character</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<p class=\"character\">Character2</p>\r\n");
      out.write("\t<div class=\"draco-wrapper\">\r\n");
      out.write("\t\t<h2 class=\"draco-fullname\">드레이코 말포이(Draco Malfoy)</h2>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<img src=\"img/draco.jpg\" class=\"dracoimg\">\r\n");
      out.write("\t\t\t<h4 class=\"draco-information\">\r\n");
      out.write("\t\t\t\t영화에서는 <a href=\"rdraco.jpg\">톰 펠튼</a>이 역할을 맡았다.<br>\r\n");
      out.write("\t\t\t\t큰 키에 창백한 얼굴을 가진 것으로 묘사되었다.\r\n");
      out.write("\t\t\t\t<br>시리우스 블랙의 사촌인 나시사 말포이와<a href=\"img/rocius.jpeg\">루시우스 말포이</a>의 외동 아들이며 \r\n");
      out.write("\t\t\t\t<br>루시우스 말포이의 의해 <a href=\"img/deatheater.jpg\">죽음을 먹는 자</a>가 되었다.\r\n");
      out.write("\t\t\t\t<br>또한<a href=\"img/black.jpg\"> 시리우스 블랙</a>, <a href=\"img/which.jpeg\">벨라트릭스 레스트랭</a>,\r\n");
      out.write("\t\t\t\t 위즐리가, 님파도르 통스와 친척이다.\r\n");
      out.write("\t\t\t\t<br>볼드모트가 세상을 떠난 후엔 자기 가문이 예전에 볼드모트가 몰락한 직후 살아남았듯이,<br> \r\n");
      out.write("\t\t\t\t아즈카반에 가지 않고 살아남는다. \r\n");
      out.write("\t\t\t\t<br>드레이코 말포이와 해리 포터는 결코 친구가 되지 못 하지만, 서로 이해하고 고맙게 생각하고 있다.\r\n");
      out.write("\t\t\t\t<br>시리즈 거의 내내 해리와 친구들에게 '입닥쳐 말포이'라는 말로 무시를 받았다.  \r\n");
      out.write("\t\t\t\t<br>드레이코 말포이는 주인공인 해리포터를 놀리며 즐거워하는 모습을 많이 보이며 \r\n");
      out.write("\t\t\t\t<br>오만한 인상을 보이며 우는 모습을 보이지 않았지만,\r\n");
      out.write("\t\t\t\t<br>해리포터 시리즈 중 6편인 해리포터와 혼혈왕자 에서 처음으로 연약한 모습과 우는 모습을 보였다. \r\n");
      out.write("\t\t\t</h4>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"teacher1-wrapper\">\r\n");
      out.write("\t\t<h2 class=\"teacher1-fullname\">알버스 덤블도어(Albus Percival Wulfric Brian Dumbledore)</h2>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<img src=\"img/teacher1.jpg\" class=\"teacher1\">\r\n");
      out.write("\t\t<h4 class=\"teacher1-information\">\r\n");
      out.write("\t\t호그와트의 교장<br>\r\n");
      out.write("\t\t출신 기숙사:그리핀도르<br>\r\n");
      out.write("\t\t지팡이: <a href=\"img/teacher1j.jpg\">딱총나무 지팡이</a><br>\r\n");
      out.write("\t\t불사조: <a href=\"img/bird.png\">Fawkes</a>\r\n");
      out.write("\t\t</h4>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"teacher2-wrapper\">\r\n");
      out.write("\t\t<h2 class=\"teacher2-fullname\">미네르바 맥고나걸(Minerva McGonagall)</h2>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<img src=\"img/teacher2.jpg\" class=\"teacher2\">\r\n");
      out.write("\t\t<h4 class=\"teacher2-information\">\r\n");
      out.write("\t\t호그와트의 교감<br>\r\n");
      out.write("\t\t출신 기숙사:그리핀도르<br>\r\n");
      out.write("\t\t지팡이: <a href=\"img/teacher2j.png\">전나무, 용의 심근, 9½ 인치, 뻣뻣함, 놀라울정도로 변신에 안성맞춤.</a><br>\r\n");
      out.write("\t\t특징: <a href=\"img/cat.gif\">얼룩고양이로 변신이 가능한 애니마구스</a>\r\n");
      out.write("\t\t</h4>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"teacher3-wrapper\">\r\n");
      out.write("\t\t<h2 class=\"teacher3-fullname\">세베루스 스네이프(Severus Snape)</h2>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<img src=\"img/teacher3.jpg\" class=\"teacher3\">\r\n");
      out.write("\t\t<h4 class=\"teacher3-information\">\r\n");
      out.write("\t\t마법의 약 교수 겸 슬리데린 사감<br>\r\n");
      out.write("\t\t출신 기숙사:슬리데린<br>\r\n");
      out.write("\t\t지팡이: <a href=\"img/teacher3j.png\">흑단목,유니콘의 꼬리털.</a><br>\r\n");
      out.write("\t\t특징: 혼혈,죽음을 먹는자로 활동함.\r\n");
      out.write("\t\t</h4>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
