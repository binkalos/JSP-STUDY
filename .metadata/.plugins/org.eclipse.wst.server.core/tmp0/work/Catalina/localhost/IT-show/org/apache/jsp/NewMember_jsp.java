/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2019-05-16 14:14:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class NewMember_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"NewMemStyle.css\" >\r\n");
      out.write("<script src=\"js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<section class=\"login-page\">\r\n");
      out.write("\t\t<div class=\"page-background\"> <!-- 배경사진 -->\r\n");
      out.write("\t\t\t<div class=\"background-blur\"></div>\r\n");
      out.write("\t\t</div><!-- page-background -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"field-box-wrapper\">\r\n");
      out.write("\t\t\t<div class=\"field-box\">\r\n");
      out.write("\t\t\t\t<header class=\"field-box-header\">\r\n");
      out.write("\t\t\t\t\t<figure class=\"logo\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"img/imoticon.png\" width=\"100px\" height=\"100px\">\r\n");
      out.write("\t\t\t\t\t</figure> \r\n");
      out.write("\t\t\t\t\t<p class=\"field-box-name\">회원가입</p>\r\n");
      out.write("\t\t\t\t</header><!-- field-box-header -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"mainbox\">\r\n");
      out.write("\t\t\t\t<div class=\"mucktip-account\">\r\n");
      out.write("\t\t\t\t\t<form class=\"op-login\" action=\"/login\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"return_url\" value=\"firstPage.jsp\"> <!-- 폼이 전송될 때 돌려줘야하는 값 -->\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"fieldset\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"field\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"input-group\" for=\"username\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p class=\"invalid-message\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"input-wrapper\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input class=\"input\" id=\"username\" name=\"username\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"ID입력\" value type=\"text\" tabindex=\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div><!-- input-wrapper -->\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"field\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"input-group\" for=\"password\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p class=\"invaild-message\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"input-wrapper\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input class=\"input\" id=\"password\" name=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"비밀번호(최소 6자)\" value type=\"password\" tabindex=\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div><!-- input-wrapper -->\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<label class=\"input-group\" for=\"password\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"input-wrapper\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input class=\"input\" id=\"pwConfirm\" name=\"pwConfirm\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplaceholder=\"비밀번호 확인\" value type=\"password\" tabindex=\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div><!-- input-wrapper -->\r\n");
      out.write("\t\t\t\t\t\t\t\t</label>\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"field\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"submit-btn\" tabindex=\"1\" type=\"submit\">가입</button>\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div><!-- mucktip-account -->\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"side-services\">\r\n");
      out.write("\t\t\t\t\t<div class=\"side-services-wrapper\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"need-an-id\">이미 계정이 있나요?</div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"new-login\">\r\n");
      out.write("\t\t\t\t\t\t\t<a class=\"login\" href=\"login.jsp\">여기서 로그인!</a>\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div><!-- field-box-wrapper -->\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div> <!-- mainbox -->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div><!-- field-box -->\r\n");
      out.write("\t\t</div><!-- field-box-wrapper -->\r\n");
      out.write("\t</section><!-- login-page -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
